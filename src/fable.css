:root {
	--2xs: calc(var(--md) / 4);
	--xs: calc(var(--md) / 3);
	--sm: calc(var(--md) / 2);
	--md: var(--base, 8px);
	--lg: calc(var(--md) * 2);
	--xl: calc(var(--md) * 3);
	--2xl: calc(var(--md) * 4);
}

/* ===== Reset =============================== */
/* =========================================== */

html {
	line-height: 1.6;
	box-sizing: border-box;
	font-weight: var(--font-weight-text, 300);
	font-family: var(--font-family-text, sans-serif, system);
	font-size: var(--font-size-text, 62.5%);
}


:is(html, body) {
	min-height: 100vh;
}

:is(*, *::before, *::after) {
	line-height: inherit;
	box-sizing: inherit;
	font-size: var(--font-size-text, clamp(2.4rem, -0.81vw + 2.72rem, 1.8rem));
}

:is(body, h1, h2, h3, h4, h5, h6, p, figure, ul, ol, blockquote) {
	padding: unset;
	margin: unset;
}

:is(img, picture, video, canvas, svg) {
	max-width: 100%;
	display: block;
	height: auto;
}

:is(input, button, textarea, select) {
	font: inherit;
}

/* ===== Layout / Grid ======================= */
/* =========================================== */

.grid {
	&:where(:not(dialog), dialog[open]) {
		display: grid;
	}

	&:not(.no-inherit) > .grid {
		grid-template-columns: subgrid;
	}

	&.top {
		align-items: start;
	}

	&:not(.top, .bottom).center {
		align-items: center;
	}

	&.bottom {
		align-items: end;
	}

	&.left {
		justify-items: start;
	}

	&:not(.left, .right).center {
		justify-items: center;
	}

	&.right {
		justify-items: end;
	}

	& > .pin-top {
		align-self: start;
	}

	& > .pin-center:not(.pin-top, .pin-bottom) {
		align-self: center;
	}

	& > .pin-bottom {
		align-self: end;
	}

	& > .pin-left {
		justify-self: start;
	}

	& > .pin-center:not(.pin-left, .pin-right) {
		justify-self: center;
	}

	& > .pin-right {
		justify-self: end;
	}

	&:where(body).holy-grail {
		grid-template-rows:
			[header] var(--header-height, max-content)
			[content] auto
			[footer] var(--footer-height, max-content);

		grid-template-columns:
			[fullbleed-start]
			max(var(--md), ((100vw - var(--content-width, 1140px)) / 2))
			[content-start]
			repeat(var(--columns, 12), 1fr)
			[content-end]
			max(var(--md), ((100vw - var(--content-width, 1140px)) / 2))
			[fullbleed-end];

		& > :not(.hero) {
			grid-column: content;
		}

		& .hero {
			grid-column: fullbleed;

			&.grid > * {
				grid-column: content;
			}
		}

		& > header {
			grid-row: header;
		}

		& > main {
			grid-row: content;
		}

		& > footer {
			grid-row: footer;
		}
	}
}

:where(ol, ul, menu):where(.grid, .stack, .level) {
	list-style: none;
}

/* ===== Layout / Stack + Level ============== */
/* =========================================== */

:where(.stack, .level) {
	&:where(:not(dialog), dialog[open]) {
		display: flex;
	}

	&.stack:not(.reverse) {
		flex-direction: column;
	}
	&.reverse.level {
		flex-direction: row-reverse;
	}
	&.reverse.stack {
		flex-direction: column-reverse;
	}

	&.wrap {
		flex-wrap: wrap;
	}

	&:not(.gap-auto):is(.level.left, .stack.top) {
		justify-content: start;
	}
	&:not(.gap-auto):is(.center):not(.level:is(.left, .right), .stack:is(.top, .bottom)) {
		justify-content: center;
	}
	&:not(.gap-auto):is(.level.right, .stack.bottom) {
		justify-content: end;
	}
	&:is(.level.top, .stack.left) {
		align-items: start;
	}
	&:is(.center):not(.level:is(.top, .bottom), .stack:is(.left, .right)) {
		align-items: center;
	}
	&:is(.level.bottom, .stack.right) {
		align-items: end;
	}

	&.level > .pin-top,
	&.stack > .pin-left {
		align-self: start;
	}
	& > .pin-center {
		align-self: center;
	}
	& > .stretch {
		align-self: stretch;
	}
	&.level > .pin-bottom,
	&.stack > .pin-right {
		align-self: end;
	}

	&.gap-auto {
		justify-content: space-between;
	}
}

/* ===== Attributes / Float ================== */
/* =========================================== */

:is(.float-left, .float-right) {
	position: relative;

	&.float-left {
		float: left;
	}
	&.float-right {
		float: right;
	}
}

/* ===== Attributes / Margin ================= */
/* =========================================== */

@each $size in $sizes {
	:is(.mar-$size, .mar-hor-$size, .mar-left-$size) {
		margin-left: var(--$size);
	}

	:is(.mar-$size, .mar-hor-$size, .mar-right-$size) {
		margin-right: var(--$size);
	}

	:is(.mar-$size, .mar-ver-$size, .mar-top-$size) {
		margin-top: var(--$size);
	}

	:is(.mar-$size, .mar-ver-$size, .mar-bottom-$size) {
		margin-bottom: var(--$size);
	}
}

/* ===== Attributes / Padding ================ */
/* =========================================== */

@each $size in $sizes {
	:is(.pad-$size, .pad-hor-$size, .pad-left-$size) {
		padding-left: var(--$size);
	}

	:is(.pad-$size, .pad-hor-$size, .pad-right-$size) {
		padding-right: var(--$size);
	}

	:is(.pad-$size, .pad-ver-$size, .pad-top-$size) {
		padding-top: var(--$size);
	}

	:is(.pad-$size, .pad-ver-$size, .pad-bottom-$size) {
		padding-bottom: var(--$size);
	}
}

/* ===== Attributes / Radius ================= */
/* =========================================== */

@each $size in $sizes {
	:is(.rad-$size, .rad-left-$size, .rad-right-$size, .rad-top-$size, .rad-bottom-$size),
	:is(.rad-top-left-$size, .rad-top-right-$size, .rad-bottom-left-$size, .rad-bottom-right-$size) {
		overflow: hidden;
	}

	:is(.rad-$size, .rad-left-$size, .rad-top-$size, .rad-top-left-$size) {
		border-top-left-radius: var(--$size);
	}
	:is(.rad-$size, .rad-right-$size, .rad-top-$size, .rad-top-right-$size) {
		border-top-right-radius: var(--$size);
	}
	:is(.rad-$size, .rad-left-$size, .rad-bottom-$size, .rad-bottom-left-$size) {
		border-bottom-left-radius: var(--$size);
	}
	:is(.rad-$size, .rad-right-$size, .rad-bottom-$size, .rad-bottom-right-$size) {
		border-bottom-right-radius: var(--$size);
	}
}

/* ===== Attributes / Text / Align =========== */
/* =========================================== */

:is(.text-left, .text-left-all > *) {
	text-align: left;
}

:is(.text-center, .text-center-all > *) {
	text-align: center;
}

:is(.text-right, .text-right-all > *) {
	text-align: right;
}

/* ===== Attributes / Text / Headings ======== */
/* =========================================== */

:is(h1, h2, h3, h4, h5, h6),
:is(.is-1, .is-2, .is-3, .is-4, .is-5, .is-6) {
	font-weight: var(--heading-font-weight, 700);
	font: var(--heading-font-family, serif, system);
}

:is(h1:not(.is-2, .is-3, .is-4, .is-5, .is-6), .is-1) {
	font-size: var(--font-size-h1, clamp(5.97rem, -0.65vw + 6.23rem, 5.49rem));
}
:is(h2:not(.is-1, .is-3, .is-4, .is-5, .is-6), .is-2) {
	font-size: var(--font-size-h2, clamp(4.98rem, -0.79vw + 5.29rem, 4.39rem));
}
:is(h3:not(.is-1, .is-2, .is-4, .is-5, .is-6), .is-3) {
	font-size: var(--font-size-h3, clamp(4.15rem, -0.85vw + 4.49rem, 3.52rem));
}
:is(h4:not(.is-1, .is-2, .is-3, .is-5, .is-6), .is-4) {
	font-size: var(--font-size-h4, clamp(3.46rem, -0.87vw + 3.8rem, 2.81rem));
}
:is(h5:not(.is-1, .is-2, .is-3, .is-4, .is-6), .is-5) {
	font-size: var(--font-size-h5, clamp(2.88rem, -0.85vw + 3.22rem, 2.25rem));
}
:is(h6:not(.is-1, .is-2, .is-3, .is-4, .is-5), .is-6) {
	font-size: var(--font-size-h6, clamp(2rem, -0.76vw + 2.3rem, 1.44rem));
}
