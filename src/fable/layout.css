:root {
	--pt-sm: calc(var(--pt-md) / 2);
	--pt-md: calc(var(--base, 8px) * 1);
	--pt-lg: calc(var(--pt-md) * 2);
	--pt-xl: calc(var(--pt-md) * 3);
}

:is(.level, .stack) {
	display: flex;

	&:is(menu, ol, ul) {
		list-style: none;
		padding: unset;
	}

	&.stack:not(.reverse) {
		flex-direction: column;
	}
	&.reverse.level {
		flex-direction: row-reverse;
	}
	&.reverse.stack {
		flex-direction: column-reverse;
	}

	&.wrap {
		flex-wrap: wrap;
	}

	&:not(.gap-auto):is(.level.left, .stack.top) {
		justify-content: start;
	}
	&:not(.gap-auto):is(.center):not(.level:is(.left, .right), .stack:is(.top, .bottom)) {
		justify-content: center;
	}
	&:not(.gap-auto):is(.level.right, .stack.bottom) {
		justify-content: end;
	}
	&:is(.level.top, .stack.left) {
		align-items: start;
	}
	&:is(.center):not(.level:is(.top, .bottom), .stack:is(.left, .right)) {
		align-items: center;
	}
	&:is(.level.bottom, .stack.right) {
		align-items: end;
	}

	&.level > .pin-top,
	&.stack > .pin-left {
		align-self: start;
	}
	& > .pin-center {
		align-self: center;
	}
	& > .stretch {
		align-self: stretch;
	}
	&.level > .pin-bottom,
	&.stack > .pin-right {
		align-self: end;
	}

	@each $s in $sizes {
		&.gap-$s {
			gap: var(--pt-$s);
		}
	}
	&.gap-auto {
		justify-content: space-between;
	}

	&.grow-all > *,
	& > .grow {
		flex-grow: 1;
	}
}

@each $s in $sizes {
	:is(.margin-$s, .margin-$(s)-hor, .margin-$(s)-left) {
		margin-left: var(--pt-$s);
	}
	:is(.margin-$s, .margin-$(s)-hor, .margin-$(s)-right) {
		margin-right: var(--pt-$s);
	}
	:is(.margin-$s, .margin-$(s)-ver, .margin-$(s)-top) {
		margin-top: var(--pt-$s);
	}
	:is(.margin-$s, .margin-$(s)-ver, .margin-$(s)-bottom) {
		margin-bottom: var(--pt-$s);
	}
}

@each $s in $sizes {
	:is(.padding-$s, .padding-$(s)-hor, .padding-$(s)-left) {
		padding-left: var(--pt-$s);
	}
	:is(.padding-$s, .padding-$(s)-hor, .padding-$(s)-right) {
		padding-right: var(--pt-$s);
	}
	:is(.padding-$s, .padding-$(s)-ver, .padding-$(s)-top) {
		padding-top: var(--pt-$s);
	}
	:is(.padding-$s, .padding-$(s)-ver, .padding-$(s)-bottom) {
		padding-bottom: var(--pt-$s);
	}
}

@each $s in $sizes {
	:is(.radius-$s, .radius-$(s)-left, .radius-$(s)-right, .radius-$(s)-top, .radius-$(s)-bottom),
	:is(.radius-$(s)-top-left, .radius-$(s)-top-right, .radius-$(s)-bottom-left, .radius-$(s)-bottom-right) {
		overflow: hidden;
	}

	:is(.radius-$s, .radius-$(s)-left, .radius-$(s)-top, .radius-$(s)-top-left) {
		border-top-left-radius: var(--pt-$s);
	}
	:is(.radius-$s, .radius-$(s)-right, .radius-$(s)-top, .radius-$(s)-top-right) {
		border-top-right-radius: var(--pt-$s);
	}
	:is(.radius-$s, .radius-$(s)-left, .radius-$(s)-bottom, .radius-$(s)-bottom-left) {
		border-bottom-left-radius: var(--pt-$s);
	}
	:is(.radius-$s, .radius-$(s)-right, .radius-$(s)-bottom, .radius-$(s)-bottom-right) {
		border-bottom-right-radius: var(--pt-$s);
	}
}

:is(h1:not(.is-2, .is-3, .is-4, .is-5, .is-6), .is-1) {
	font-size: calc(1rem * pow($fontScale, 6) * 1vw);
	/* font-size: 2.986rem; */
}
:is(h2:not(.is-1, .is-3, .is-4, .is-5, .is-6), .is-2) {
	font-size: calc(1rem * pow($fontScale, 5));
	/* font-size: 2.489rem; */
}
:is(h3:not(.is-1, .is-2, .is-4, .is-5, .is-6), .is-3) {
	font-size: calc(1rem * pow($fontScale, 4));
	/* font-size: 2.074rem; */
}
:is(h4:not(.is-1, .is-2, .is-3, .is-5, .is-6), .is-4) {
	font-size: calc(1rem * pow($fontScale, 3));
	/* font-size: 1.728rem; */
}
:is(h5:not(.is-1, .is-2, .is-3, .is-4, .is-6), .is-5) {
	font-size: calc(1rem * pow($fontScale, 2));
	/* font-size: 1.44rem; */
}
:is(h6:not(.is-1, .is-2, .is-3, .is-4, .is-5), .is-6) {
	font-size: calc(1rem * pow($fontScale, 1));
	/* font-size: 1.2rem; */
}

.txt-center {
	text-align: center;
}
