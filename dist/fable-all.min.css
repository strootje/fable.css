:root {
	--sm: calc(var(--md) / 2);
	--md: calc(var(--base, 8px));
	--lg: calc(var(--md) * 2);
	--xl: calc(var(--md) * 3);
}

:is(:is(.grid, .fable), :is(.level, .stack)):is(menu, ol, ul) {
		list-style: none;
		padding: unset;
	}

:is(:is(.grid, .fable), :is(.level, .stack)):not(.no-gap) {
		gap: var(--md);
	}

:is(:is(.grid, .fable), :is(.level, .stack)).gap-sm {
			gap: var(--sm);
		}

:is(:is(.grid, .fable), :is(.level, .stack)).gap-md {
			gap: var(--md);
		}

:is(:is(.grid, .fable), :is(.level, .stack)).gap-lg {
			gap: var(--lg);
		}

:is(:is(.grid, .fable), :is(.level, .stack)).gap-xl {
			gap: var(--xl);
		}

:is(.grid, .fable) {
	display: grid;
}

:is(.grid, .fable) > .span-1 {
			grid-column: span 1;
		}

:is(.grid, .fable) > .span-2 {
			grid-column: span 2;
		}

:is(.grid, .fable) > .span-3 {
			grid-column: span 3;
		}

:is(.grid, .fable) > .span-4 {
			grid-column: span 4;
		}

:is(.grid, .fable) > .span-5 {
			grid-column: span 5;
		}

:is(.grid, .fable) > .span-6 {
			grid-column: span 6;
		}

:is(.grid, .fable) > .span-7 {
			grid-column: span 7;
		}

:is(.grid, .fable) > .span-8 {
			grid-column: span 8;
		}

:is(.grid, .fable) > .span-9 {
			grid-column: span 9;
		}

:is(.grid, .fable) > .span-10 {
			grid-column: span 10;
		}

:is(.grid, .fable) > .span-11 {
			grid-column: span 11;
		}

:is(.grid, .fable) > .span-12 {
			grid-column: span 12;
		}

:is(.grid, .fable) > .grid:not(.no-inherit) {
		grid-template-columns: subgrid;
		gap: inherit;
	}

.fable:not(.panecake-with-hero) {
		grid-template-columns:
			[content-start]
			repeat(var(--columns, 12), 1fr)
			[content-end];
	}

.fable.panecake-with-hero {
		grid-template-rows:
			[header] var(--header-height, max-content)
			[content] auto
			[footer] var(--footer-height, max-content);

		grid-template-columns:
			[fullbleed-start]
			max(var(--md), ((100vw - var(--content-width, 1140px)) / 2))
			[content-start]
			repeat(var(--columns, 12), 1fr)
			[content-end]
			max(var(--md), ((100vw - var(--content-width, 1140px)) / 2))
			[fullbleed-end];
	}

.fable.panecake-with-hero > :is(header, :is(main, article), footer) {
			grid-template-columns: subgrid;
			grid-column: content;
			display: grid;
		}

.fable.panecake-with-hero .hero {
			grid-column: fullbleed;
		}

.fable.panecake-with-hero .hero > :not(.hero) {
				grid-column: content;
			}

.fable.panecake-with-hero > header {
			grid-row: header;
		}

.fable.panecake-with-hero > :is(main, article) {
			grid-row: content;
		}

.fable.panecake-with-hero > footer {
			grid-row: footer;
		}

:is(.level, .stack) {
	display: flex;
}

:is(.level, .stack).stack:not(.reverse) {
		flex-direction: column;
	}

:is(.level, .stack).reverse.level {
		flex-direction: row-reverse;
	}

:is(.level, .stack).reverse.stack {
		flex-direction: column-reverse;
	}

:is(.level, .stack).wrap {
		flex-wrap: wrap;
	}

:is(.level, .stack):not(.gap-auto):is(.level.left, .stack.top) {
		justify-content: start;
	}

:is(.level, .stack):not(.gap-auto):is(.center):not(.level:is(.left, .right), .stack:is(.top, .bottom)) {
		justify-content: center;
	}

:is(.level, .stack):not(.gap-auto):is(.level.right, .stack.bottom) {
		justify-content: end;
	}

:is(.level, .stack):is(.level.top, .stack.left) {
		align-items: start;
	}

:is(.level, .stack):is(.center):not(.level:is(.top, .bottom), .stack:is(.left, .right)) {
		align-items: center;
	}

:is(.level, .stack):is(.level.bottom, .stack.right) {
		align-items: end;
	}

:is(.level, .stack).level > .pin-top,
	:is(.level, .stack).stack > .pin-left {
		align-self: start;
	}

:is(.level, .stack) > .pin-center {
		align-self: center;
	}

:is(.level, .stack) > .stretch {
		align-self: stretch;
	}

:is(.level, .stack).level > .pin-bottom,
	:is(.level, .stack).stack > .pin-right {
		align-self: end;
	}

:is(.level, .stack).gap-auto {
		justify-content: space-between;
	}

:is(.level, .stack).grow-all > *,
	:is(.level, .stack) > .grow {
		flex-grow: 1;
	}

:root {
	/* Theme - Brand */
	--brand-hue: var(--theme-hue, 49);
	--brand-saturation: var(--theme-saturation, 100%);
	--brand-lightness: var(--theme-lightness, 50%);

	/* Theme - Light */
	--brand-light: hsl(var(--brand-hue) var(--brand-saturation) var(--brand-lightness));
	--text1-light: hsl(var(--brand-hue) var(--brand-saturation) 10%);
	--text2-light: hsl(var(--brand-hue) 30% 30%);
	--surface1-light: hsl(var(--brand-hue) 25% 90%);
	--surface2-light: hsl(var(--brand-hue) 20% 99%);
	--surface3-light: hsl(var(--brand-hue) 20% 92%);
	--surface4-light: hsl(var(--brand-hue) 20% 85%);
	--surface-shadow-light: var(--brand-hue) 10% 20%;
	--shadow-strength-light: 0.02;

	/* Theme - Dark */
	--brand-dark: hsl(var(--brand-hue) calc(var(--brand-saturation) / 2) calc(var(--brand-lightness) / 1.5));
	--text1-dark: hsl(var(--brand-hue) 15% 85%);
	--text2-dark: hsl(var(--brand-hue) 5% 65%);
	--surface1-dark: hsl(var(--brand-hue) 10% 10%);
	--surface2-dark: hsl(var(--brand-hue) 10% 15%);
	--surface3-dark: hsl(var(--brand-hue) 5% 20%);
	--surface4-dark: hsl(var(--brand-hue) 5% 25%);
	--surface-shadow-dark: var(--brand-hue) 50% 3%;
	--shadow-strength-dark: 0.8;

	/* Theme - Dim */
	--brand-dim: hsl(var(--brand-hue) calc(var(--brand-saturation) / 1.25) calc(var(--brand-lightness) / 1.25));
	--text1-dim: hsl(var(--brand-hue) 15% 75%);
	--text2-dim: hsl(var(--brand-hue) 10% 61%);
	--surface1-dim: hsl(var(--brand-hue) 10% 20%);
	--surface2-dim: hsl(var(--brand-hue) 10% 25%);
	--surface3-dim: hsl(var(--brand-hue) 5% 30%);
	--surface4-dim: hsl(var(--brand-hue) 5% 35%);
	--surface-shadow-dim: var(--brand-hue) 30% 13%;
	--shadow-strength-dim: 0.2;
}

:root {
	color-scheme: light;

	/* set defaults */
	--brand: var(--brand-light);
	--text1: var(--text1-light);
	--text2: var(--text2-light);
	--surface1: var(--surface1-light);
	--surface2: var(--surface2-light);
	--surface3: var(--surface3-light);
	--surface4: var(--surface4-light);
	--surface-shadow: var(--surface-shadow-light);
	--shadow-strength: var(--shadow-strength-light);
}

@media (prefers-color-scheme: dark) {
	:root {
		color-scheme: dark;
		--brand: var(--brand-dark);
		--text1: var(--text1-dark);
		--text2: var(--text2-dark);
		--surface1: var(--surface1-dark);
		--surface2: var(--surface2-dark);
		--surface3: var(--surface3-dark);
		--surface4: var(--surface4-dark);
		--surface-shadow: var(--surface-shadow-dark);
		--shadow-strength: var(--shadow-strength-dark);
	}
}

[color-scheme='light'] {
	color-scheme: light;
	--brand: var(--brand-light);
	--text1: var(--text1-light);
	--text2: var(--text2-light);
	--surface1: var(--surface1-light);
	--surface2: var(--surface2-light);
	--surface3: var(--surface3-light);
	--surface4: var(--surface4-light);
	--surface-shadow: var(--surface-shadow-light);
	--shadow-strength: var(--shadow-strength-light);
}

[color-scheme='dark'] {
	color-scheme: dark;
	--brand: var(--brand-dark);
	--text1: var(--text1-dark);
	--text2: var(--text2-dark);
	--surface1: var(--surface1-dark);
	--surface2: var(--surface2-dark);
	--surface3: var(--surface3-dark);
	--surface4: var(--surface4-dark);
	--surface-shadow: var(--surface-shadow-dark);
	--shadow-strength: var(--shadow-strength-dark);
}

[color-scheme='dim'] {
	color-scheme: dark;
	--brand: var(--brand-dim);
	--text1: var(--text1-dim);
	--text2: var(--text2-dim);
	--surface1: var(--surface1-dim);
	--surface2: var(--surface2-dim);
	--surface3: var(--surface3-dim);
	--surface4: var(--surface4-dim);
	--surface-shadow: var(--surface-shadow-dim);
	--shadow-strength: var(--shadow-strength-dim);
}

.brand {
	color: var(--brand);
	background-color: var(--brand);
}

.surface1 {
	background-color: var(--surface1);
	color: var(--text2);
}

.surface2 {
	background-color: var(--surface2);
	color: var(--text2);
}

.surface3 {
	background-color: var(--surface3);
	color: var(--text1);
}

.surface4 {
	background-color: var(--surface4);
	color: var(--text1);
}

.text1 {
	color: var(--text1);
}

p.text1 {
	font-weight: 200;
}

.text2 {
	color: var(--text2);
}

/* 
 * inspired by, see:
 * https://elad2412.github.io/the-new-css-reset/
**/

html {
	font-size: var(--text-font-size, 16px);
	line-height: 1.6;
	box-sizing: border-box;

	font-weight: var(--text-font-weight, 300);
	font-family: var(--text-font-family, sans-serif, system);
}

:is(html, body) {
	min-height: 100vh;
}

:is(*, *::before, *::after) {
	line-height: inherit;
	box-sizing: inherit;
	font-size: inherit;
}

:is(body, h1, h2, h3, h4, h5, h6, p, figure, ul, ol, blockquote) {
	padding: unset;
	margin: unset;
}

:is(img, picture, video, canvas, svg) {
	max-width: 100%;
	display: block;
	height: auto;
}

:is(input, button, textarea, select) {
	font: inherit;
}

a {
	color: var(--text1);
	text-decoration: none;
}

a:hover {
		color: var(--text2);
	}

blockquote {
	height: 100%;
	background-color: var(--surface1);
}

blockquote::before {
		font-family: monospace;
		font-size: 96px;
		content: '"';
	}

.button {
	background-color: var(--surface1);
	color: var(--text1);
}

.button.brand {
		background-color: var(--brand);
		font-weight: 700;
		color: var(--text2);
	}

details[open] > summary::before {
		transform: rotateZ(90deg);
	}

details[open] > *:not(summary) {
		animation: details-show 200ms;
	}

/* display: flex; */

/* align-items: center; */

details > summary > :is(h1, h2, h3, h4, h5, h6) {
			display: inline-block;
		}

@keyframes details-show {
	from {
		opacity: 0;
		transform: var(--details-translate, translateY(-0.5em));
	}
}

.no-border {
	border: 0;
}

:is(.float-left, .float-right) {
	position: relative;
}

:is(.float-left, .float-right).float-left {
		float: left;
	}

:is(.float-left, .float-right).float-right {
		float: right;
	}

.no-margin {
	margin: 0;
}

:is(.margin-sm, .margin-sm-hor, .margin-sm-left),
	:is(.margin-sm-all > *, .margin-sm-hor-all > *, .margin-sm-left-all > *) {
		margin-left: var(--sm);
	}

:is(.margin-sm, .margin-sm-hor, .margin-sm-right),
	:is(.margin-sm-all > *, .margin-sm-hor-all > *, .margin-sm-right-all > *) {
		margin-right: var(--sm);
	}

:is(.margin-sm, .margin-sm-ver, .margin-sm-top),
	:is(.margin-sm-all > *, .margin-sm-ver-all > *, .margin-sm-top-all > *) {
		margin-top: var(--sm);
	}

:is(.margin-sm, .margin-sm-ver, .margin-sm-bottom),
	:is(.margin-sm-all > *, .margin-sm-ver-all > *, .margin-sm-bottom-all > *) {
		margin-bottom: var(--sm);
	}

:is(.margin-md, .margin-md-hor, .margin-md-left),
	:is(.margin-md-all > *, .margin-md-hor-all > *, .margin-md-left-all > *) {
		margin-left: var(--md);
	}

:is(.margin-md, .margin-md-hor, .margin-md-right),
	:is(.margin-md-all > *, .margin-md-hor-all > *, .margin-md-right-all > *) {
		margin-right: var(--md);
	}

:is(.margin-md, .margin-md-ver, .margin-md-top),
	:is(.margin-md-all > *, .margin-md-ver-all > *, .margin-md-top-all > *) {
		margin-top: var(--md);
	}

:is(.margin-md, .margin-md-ver, .margin-md-bottom),
	:is(.margin-md-all > *, .margin-md-ver-all > *, .margin-md-bottom-all > *) {
		margin-bottom: var(--md);
	}

:is(.margin-lg, .margin-lg-hor, .margin-lg-left),
	:is(.margin-lg-all > *, .margin-lg-hor-all > *, .margin-lg-left-all > *) {
		margin-left: var(--lg);
	}

:is(.margin-lg, .margin-lg-hor, .margin-lg-right),
	:is(.margin-lg-all > *, .margin-lg-hor-all > *, .margin-lg-right-all > *) {
		margin-right: var(--lg);
	}

:is(.margin-lg, .margin-lg-ver, .margin-lg-top),
	:is(.margin-lg-all > *, .margin-lg-ver-all > *, .margin-lg-top-all > *) {
		margin-top: var(--lg);
	}

:is(.margin-lg, .margin-lg-ver, .margin-lg-bottom),
	:is(.margin-lg-all > *, .margin-lg-ver-all > *, .margin-lg-bottom-all > *) {
		margin-bottom: var(--lg);
	}

:is(.margin-xl, .margin-xl-hor, .margin-xl-left),
	:is(.margin-xl-all > *, .margin-xl-hor-all > *, .margin-xl-left-all > *) {
		margin-left: var(--xl);
	}

:is(.margin-xl, .margin-xl-hor, .margin-xl-right),
	:is(.margin-xl-all > *, .margin-xl-hor-all > *, .margin-xl-right-all > *) {
		margin-right: var(--xl);
	}

:is(.margin-xl, .margin-xl-ver, .margin-xl-top),
	:is(.margin-xl-all > *, .margin-xl-ver-all > *, .margin-xl-top-all > *) {
		margin-top: var(--xl);
	}

:is(.margin-xl, .margin-xl-ver, .margin-xl-bottom),
	:is(.margin-xl-all > *, .margin-xl-ver-all > *, .margin-xl-bottom-all > *) {
		margin-bottom: var(--xl);
	}

.no-padding {
	padding: 0;
}

:is(.padding-sm, .padding-sm-hor, .padding-sm-left),
	:is(.padding-sm-all > *, .padding-sm-hor-all > *, .padding-sm-left-all > *) {
		padding-left: var(--sm);
	}

:is(.padding-sm, .padding-sm-hor, .padding-sm-right),
	:is(.padding-sm-all > *, .padding-sm-hor-all > *, .padding-sm-right-all > *) {
		padding-right: var(--sm);
	}

:is(.padding-sm, .padding-sm-ver, .padding-sm-top),
	:is(.padding-sm-all > *, .padding-sm-ver-all > *, .padding-sm-top-all > *) {
		padding-top: var(--sm);
	}

:is(.padding-sm, .padding-sm-ver, .padding-sm-bottom),
	:is(.padding-sm-all > *, .padding-sm-ver-all > *, .padding-sm-bottom-all > *) {
		padding-bottom: var(--sm);
	}

:is(.padding-md, .padding-md-hor, .padding-md-left),
	:is(.padding-md-all > *, .padding-md-hor-all > *, .padding-md-left-all > *) {
		padding-left: var(--md);
	}

:is(.padding-md, .padding-md-hor, .padding-md-right),
	:is(.padding-md-all > *, .padding-md-hor-all > *, .padding-md-right-all > *) {
		padding-right: var(--md);
	}

:is(.padding-md, .padding-md-ver, .padding-md-top),
	:is(.padding-md-all > *, .padding-md-ver-all > *, .padding-md-top-all > *) {
		padding-top: var(--md);
	}

:is(.padding-md, .padding-md-ver, .padding-md-bottom),
	:is(.padding-md-all > *, .padding-md-ver-all > *, .padding-md-bottom-all > *) {
		padding-bottom: var(--md);
	}

:is(.padding-lg, .padding-lg-hor, .padding-lg-left),
	:is(.padding-lg-all > *, .padding-lg-hor-all > *, .padding-lg-left-all > *) {
		padding-left: var(--lg);
	}

:is(.padding-lg, .padding-lg-hor, .padding-lg-right),
	:is(.padding-lg-all > *, .padding-lg-hor-all > *, .padding-lg-right-all > *) {
		padding-right: var(--lg);
	}

:is(.padding-lg, .padding-lg-ver, .padding-lg-top),
	:is(.padding-lg-all > *, .padding-lg-ver-all > *, .padding-lg-top-all > *) {
		padding-top: var(--lg);
	}

:is(.padding-lg, .padding-lg-ver, .padding-lg-bottom),
	:is(.padding-lg-all > *, .padding-lg-ver-all > *, .padding-lg-bottom-all > *) {
		padding-bottom: var(--lg);
	}

:is(.padding-xl, .padding-xl-hor, .padding-xl-left),
	:is(.padding-xl-all > *, .padding-xl-hor-all > *, .padding-xl-left-all > *) {
		padding-left: var(--xl);
	}

:is(.padding-xl, .padding-xl-hor, .padding-xl-right),
	:is(.padding-xl-all > *, .padding-xl-hor-all > *, .padding-xl-right-all > *) {
		padding-right: var(--xl);
	}

:is(.padding-xl, .padding-xl-ver, .padding-xl-top),
	:is(.padding-xl-all > *, .padding-xl-ver-all > *, .padding-xl-top-all > *) {
		padding-top: var(--xl);
	}

:is(.padding-xl, .padding-xl-ver, .padding-xl-bottom),
	:is(.padding-xl-all > *, .padding-xl-ver-all > *, .padding-xl-bottom-all > *) {
		padding-bottom: var(--xl);
	}

.no-radius {
	border-radius: 0;
}

:is(.radius-sm, .radius-sm-left, .radius-sm-right, .radius-sm-top, .radius-sm-bottom),
	:is(.radius-sm-top-left, .radius-sm-top-right, .radius-sm-bottom-left, .radius-sm-bottom-right),
	:is(.radius-sm-all > *, .radius-sm-left-all > *, .radius-sm-right-all > *, .radius-sm-top-all > *, .radius-sm-bottom-all > *),
	:is(.radius-sm-top-left-all > *, .radius-sm-top-right-all > *, .radius-sm-bottom-left-all > *, .radius-sm-bottom-right-all > *) {
		overflow: hidden;
	}

:is(.radius-sm, .radius-sm-left, .radius-sm-top, .radius-sm-top-left),
	:is(.radius-sm-all > *, .radius-sm-left-all > *, .radius-sm-top-all > *, .radius-sm-top-left-all > *) {
		border-top-left-radius: var(--sm);
	}

:is(.radius-sm, .radius-sm-right, .radius-sm-top, .radius-sm-top-right),
	:is(.radius-sm-all > *, .radius-sm-right-all > *, .radius-sm-top-all > *, .radius-sm-top-right-all > *) {
		border-top-right-radius: var(--sm);
	}

:is(.radius-sm, .radius-sm-left, .radius-sm-bottom, .radius-sm-bottom-left),
	:is(.radius-sm-all > *, .radius-sm-left-all > *, .radius-sm-bottom-all > *, .radius-sm-bottom-left-all > *) {
		border-bottom-left-radius: var(--sm);
	}

:is(.radius-sm, .radius-sm-right, .radius-sm-bottom, .radius-sm-bottom-right),
	:is(.radius-sm-all > *, .radius-sm-right-all > *, .radius-sm-bottom-all > *, .radius-sm-bottom-right-all > *) {
		border-bottom-right-radius: var(--sm);
	}

:is(.radius-md, .radius-md-left, .radius-md-right, .radius-md-top, .radius-md-bottom),
	:is(.radius-md-top-left, .radius-md-top-right, .radius-md-bottom-left, .radius-md-bottom-right),
	:is(.radius-md-all > *, .radius-md-left-all > *, .radius-md-right-all > *, .radius-md-top-all > *, .radius-md-bottom-all > *),
	:is(.radius-md-top-left-all > *, .radius-md-top-right-all > *, .radius-md-bottom-left-all > *, .radius-md-bottom-right-all > *) {
		overflow: hidden;
	}

:is(.radius-md, .radius-md-left, .radius-md-top, .radius-md-top-left),
	:is(.radius-md-all > *, .radius-md-left-all > *, .radius-md-top-all > *, .radius-md-top-left-all > *) {
		border-top-left-radius: var(--md);
	}

:is(.radius-md, .radius-md-right, .radius-md-top, .radius-md-top-right),
	:is(.radius-md-all > *, .radius-md-right-all > *, .radius-md-top-all > *, .radius-md-top-right-all > *) {
		border-top-right-radius: var(--md);
	}

:is(.radius-md, .radius-md-left, .radius-md-bottom, .radius-md-bottom-left),
	:is(.radius-md-all > *, .radius-md-left-all > *, .radius-md-bottom-all > *, .radius-md-bottom-left-all > *) {
		border-bottom-left-radius: var(--md);
	}

:is(.radius-md, .radius-md-right, .radius-md-bottom, .radius-md-bottom-right),
	:is(.radius-md-all > *, .radius-md-right-all > *, .radius-md-bottom-all > *, .radius-md-bottom-right-all > *) {
		border-bottom-right-radius: var(--md);
	}

:is(.radius-lg, .radius-lg-left, .radius-lg-right, .radius-lg-top, .radius-lg-bottom),
	:is(.radius-lg-top-left, .radius-lg-top-right, .radius-lg-bottom-left, .radius-lg-bottom-right),
	:is(.radius-lg-all > *, .radius-lg-left-all > *, .radius-lg-right-all > *, .radius-lg-top-all > *, .radius-lg-bottom-all > *),
	:is(.radius-lg-top-left-all > *, .radius-lg-top-right-all > *, .radius-lg-bottom-left-all > *, .radius-lg-bottom-right-all > *) {
		overflow: hidden;
	}

:is(.radius-lg, .radius-lg-left, .radius-lg-top, .radius-lg-top-left),
	:is(.radius-lg-all > *, .radius-lg-left-all > *, .radius-lg-top-all > *, .radius-lg-top-left-all > *) {
		border-top-left-radius: var(--lg);
	}

:is(.radius-lg, .radius-lg-right, .radius-lg-top, .radius-lg-top-right),
	:is(.radius-lg-all > *, .radius-lg-right-all > *, .radius-lg-top-all > *, .radius-lg-top-right-all > *) {
		border-top-right-radius: var(--lg);
	}

:is(.radius-lg, .radius-lg-left, .radius-lg-bottom, .radius-lg-bottom-left),
	:is(.radius-lg-all > *, .radius-lg-left-all > *, .radius-lg-bottom-all > *, .radius-lg-bottom-left-all > *) {
		border-bottom-left-radius: var(--lg);
	}

:is(.radius-lg, .radius-lg-right, .radius-lg-bottom, .radius-lg-bottom-right),
	:is(.radius-lg-all > *, .radius-lg-right-all > *, .radius-lg-bottom-all > *, .radius-lg-bottom-right-all > *) {
		border-bottom-right-radius: var(--lg);
	}

:is(.radius-xl, .radius-xl-left, .radius-xl-right, .radius-xl-top, .radius-xl-bottom),
	:is(.radius-xl-top-left, .radius-xl-top-right, .radius-xl-bottom-left, .radius-xl-bottom-right),
	:is(.radius-xl-all > *, .radius-xl-left-all > *, .radius-xl-right-all > *, .radius-xl-top-all > *, .radius-xl-bottom-all > *),
	:is(.radius-xl-top-left-all > *, .radius-xl-top-right-all > *, .radius-xl-bottom-left-all > *, .radius-xl-bottom-right-all > *) {
		overflow: hidden;
	}

:is(.radius-xl, .radius-xl-left, .radius-xl-top, .radius-xl-top-left),
	:is(.radius-xl-all > *, .radius-xl-left-all > *, .radius-xl-top-all > *, .radius-xl-top-left-all > *) {
		border-top-left-radius: var(--xl);
	}

:is(.radius-xl, .radius-xl-right, .radius-xl-top, .radius-xl-top-right),
	:is(.radius-xl-all > *, .radius-xl-right-all > *, .radius-xl-top-all > *, .radius-xl-top-right-all > *) {
		border-top-right-radius: var(--xl);
	}

:is(.radius-xl, .radius-xl-left, .radius-xl-bottom, .radius-xl-bottom-left),
	:is(.radius-xl-all > *, .radius-xl-left-all > *, .radius-xl-bottom-all > *, .radius-xl-bottom-left-all > *) {
		border-bottom-left-radius: var(--xl);
	}

:is(.radius-xl, .radius-xl-right, .radius-xl-bottom, .radius-xl-bottom-right),
	:is(.radius-xl-all > *, .radius-xl-right-all > *, .radius-xl-bottom-all > *, .radius-xl-bottom-right-all > *) {
		border-bottom-right-radius: var(--xl);
	}

:is(h1, h2, h3, h4, h5, h6),
:is(.is-1, .is-2, .is-3, .is-4, .is-5, .is-6) {
	font-weight: var(--heading-font-weight, 700);
	font: var(--heading-font-family, serif, system);
}

:is(h1:not(.is-2, .is-3, .is-4, .is-5, .is-6), .is-1) {
	font-size: calc(clamp(0.6rem, 2vw, 1rem) * pow(1.2, 6));
}

:is(h2:not(.is-1, .is-3, .is-4, .is-5, .is-6), .is-2) {
	font-size: calc(clamp(0.7rem, 2vw, 1rem) * pow(1.2, 5));
}

:is(h3:not(.is-1, .is-2, .is-4, .is-5, .is-6), .is-3) {
	font-size: calc(clamp(0.8rem, 2vw, 1rem) * pow(1.2, 4));
}

:is(h4:not(.is-1, .is-2, .is-3, .is-5, .is-6), .is-4) {
	font-size: calc(clamp(0.8rem, 2vw, 1rem) * pow(1.2, 3));
}

:is(h5:not(.is-1, .is-2, .is-3, .is-4, .is-6), .is-5) {
	font-size: calc(clamp(0.9rem, 2vw, 1rem) * pow(1.2, 2));
}

:is(h6:not(.is-1, .is-2, .is-3, .is-4, .is-5), .is-6) {
	font-size: calc(clamp(0.9rem, 2vw, 1rem) * pow(1.2, 1));
}

:is(.text-center, .text-center-all > *) {
	text-align: center;
}
